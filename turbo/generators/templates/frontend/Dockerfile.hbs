# Stage 1: Setup base
FROM node:22-alpine AS base
RUN apk add --no-cache python3 make g++ gcc
ENV PNPM_HOME="/pnpm"
ENV PATH="$PNPM_HOME:$PATH"
RUN npm install -g pnpm
RUN pnpm install -g turbo

WORKDIR /repo
COPY . .
RUN turbo prune @repo/{{ name }} --docker

# Stage 2: Build
FROM node:22-alpine AS builder
RUN apk add --no-cache python3 make g++ gcc
ENV PNPM_HOME="/pnpm"
ENV PATH="$PNPM_HOME:$PATH"
RUN npm install -g pnpm

WORKDIR /repo

COPY --from=base /repo/out/full/ .
RUN pnpm install

# Build the project
WORKDIR /repo/apps/{{ name }}
RUN pnpm turbo run build --filter=@repo/{{ name }}...

# Stage 3: Run
FROM nginx:alpine AS runner

COPY --from=builder /repo/apps/{{ name }}/dist /usr/share/nginx/html

# Create custom nginx config for port {{ port }}
RUN echo 'server { listen {{ port }}; location / { root /usr/share/nginx/html; index index.html; try_files $uri $uri/ /index.html; } }' > /etc/nginx/conf.d/default.conf

EXPOSE {{ port }}
CMD ["nginx", "-g", "daemon off;"]